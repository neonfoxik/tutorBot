# Generated by Django 5.1.6 on 2025-10-18 14:05

import bot.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название группы')),
                ('telegram_group_chat_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='ID Telegram-чата группы')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('telegram_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
                ('class_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Класс')),
                ('is_registered', models.BooleanField(default=False, verbose_name='Завершена регистрация')),
                ('register_date', models.DateField(default='2025-08-25', verbose_name='Дата регистрации')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Администратор')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Учитель')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Баланс')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='AdminState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.CharField(max_length=50, verbose_name='ID администратора')),
                ('state', models.CharField(max_length=100, verbose_name='Состояние')),
                ('data', models.JSONField(default=dict, verbose_name='Данные состояния')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Состояние администратора',
                'verbose_name_plural': 'Состояния администраторов',
                'unique_together': {('admin_id', 'state')},
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата урока')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Начало')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='Окончание')),
                ('topic', models.CharField(blank=True, max_length=200, null=True, verbose_name='Тема')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Заметки')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='bot.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['-date', '-start_time'],
                'unique_together': {('group', 'date', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='ComplexTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Описание')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='bot.group', verbose_name='Группа')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='bot.lesson', verbose_name='Урок')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(help_text="Например: 'Иван Петров' или 'Мария Сидорова'", max_length=100, verbose_name='Имя профиля')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
                ('class_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Класс')),
                ('education_level', models.CharField(blank=True, choices=[('base', 'База'), ('profile', 'Профиль')], max_length=20, null=True, verbose_name='Уровень (база/профиль)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный профиль')),
                ('is_registered', models.BooleanField(default=False, verbose_name='Завершена регистрация')),
                ('register_date', models.DateField(default='2025-08-25', verbose_name='Дата регистрации')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Баланс')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='bot.group', verbose_name='Группа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_profiles', to='bot.user', verbose_name='Пользователь Telegram')),
            ],
            options={
                'verbose_name': 'Профиль ученика',
                'verbose_name_plural': 'Профили учеников',
                'unique_together': {('user', 'profile_name')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yookassa_payment_id', models.CharField(max_length=100, unique=True, verbose_name='ID платежа в ЮKassa')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма платежа')),
                ('currency', models.CharField(default='RUB', max_length=3, verbose_name='Валюта')),
                ('status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('waiting_for_capture', 'Ожидает подтверждения'), ('succeeded', 'Успешно'), ('canceled', 'Отменен')], default='pending', max_length=20, verbose_name='Статус платежа')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание платежа')),
                ('payment_method', models.JSONField(blank=True, null=True, verbose_name='Метод оплаты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('payment_month', models.IntegerField(verbose_name='Месяц оплаты')),
                ('payment_year', models.IntegerField(verbose_name='Год оплаты')),
                ('pricing_plan', models.CharField(max_length=50, verbose_name='Тарифный план')),
                ('student_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bot.studentprofile', verbose_name='Профиль ученика')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplexHomework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('done', 'Сделал'), ('not_done', 'Не сделал')], default='not_done', max_length=8, verbose_name='Статус')),
                ('complex_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.complextask', verbose_name='Набор заданий')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='bot.lesson', verbose_name='Урок')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='bot.studentprofile', verbose_name='Ученик')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание задания')),
                ('answer', models.TextField(blank=True, help_text='Если ответ развернутый - оставьте поле пустым', null=True, verbose_name='Правильный ответ на задание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('complex_task', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='bot.complextask', verbose_name='Набор заданий')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to='bot.user', verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_text', models.TextField(blank=True, null=True, verbose_name='Текст задания')),
                ('status', models.CharField(choices=[('done', 'Сделал'), ('not_done', 'Не сделал')], default='not_done', max_length=8, verbose_name='Статус')),
                ('result', models.CharField(blank=True, choices=[('correct', 'Верно'), ('incorrect', 'Неверно'), ('text', 'Текстовый ответ')], max_length=10, null=True, verbose_name='Результат проверки')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Ответ ученика')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Отправлено')),
                ('checked_at', models.DateTimeField(blank=True, null=True, verbose_name='Проверено')),
                ('complex_homework', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='homework_answers', to='bot.complexhomework', verbose_name='В составе домашней работы')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='homework_answers', to='bot.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=bot.models.task_file_upload_to, verbose_name='Файл')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='bot.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Файл задания',
                'verbose_name_plural': 'Файлы задания',
            },
        ),
        migrations.CreateModel(
            name='TaskImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=bot.models.task_image_upload_to, verbose_name='Изображение')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='bot.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Изображение задания',
                'verbose_name_plural': 'Изображения задания',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaching_groups', to='bot.user', verbose_name='Преподаватель'),
        ),
        migrations.CreateModel(
            name='LessonAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Был'), ('absent', 'Не был'), ('excused', 'Уважительная причина')], default='present', max_length=10, verbose_name='Статус')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарий')),
                ('marked_at', models.DateTimeField(auto_now=True, verbose_name='Отмечено')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='bot.lesson', verbose_name='Урок')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='bot.studentprofile', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
                'unique_together': {('lesson', 'student')},
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(verbose_name='Месяц')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Оплаченная сумма')),
                ('pricing_plan', models.CharField(max_length=50, verbose_name='Тарифный план')),
                ('payment_type', models.CharField(choices=[('card', 'Банковская карта'), ('cash', 'Наличные'), ('transfer', 'Перевод')], default='card', max_length=20, verbose_name='Тип оплаты')),
                ('status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('completed', 'Завершено'), ('cancelled', 'Отменено')], default='completed', max_length=20, verbose_name='Статус оплаты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('paid_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата оплаты')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_records', to='bot.payment', verbose_name='Платеж')),
                ('student_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_history', to='bot.studentprofile', verbose_name='Профиль ученика')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_history', to='bot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'История оплат',
                'verbose_name_plural': 'История оплат',
                'ordering': ['-year', '-month'],
                'unique_together': {('user', 'month', 'year')},
            },
        ),
    ]
